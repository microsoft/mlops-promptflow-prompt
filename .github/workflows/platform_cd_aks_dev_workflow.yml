---
name: Platform CD AKS Dev Workflow

on:
  workflow_call:
    inputs:
      exec_environment:
        type: string
        description: "Execution Environment"
        required: true
        default: "dev"
      model_type:
        type: string
        description: "type of model to execute"
        required: true
        default: "named_entity_recognition"
    secrets:
      subscription_id:
        description: "the subscription ID hosting the AML instance."
        required: true
      azure_credentials:
        description: "the credentials to use to authenticate with Azure."
        required: true
      aoai_api_key:
        description: "the API key to use to authenticate with AOAI."
        required: true
      aoai_base_endpoint:
        required: true
        description: "Azure OpenAI base endpoint."

env:
  ACR_NAME: mlopspromptflowacr
  AKS_CLUSTER_NAME: mlopspromptflowaks
  AKS_RESOURCE_GROUP: mlops-promptflow-template

jobs:
  build-and-deploy-aks:
    name: build and deploy AKS
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Export Secrets 
        uses: oNaiPs/secrets-to-env-action@v1
        with:
          secrets: ${{ toJSON(secrets) }}            
      - name: Install PromptFlow
        run: |
          pip install promptflow promptflow-tools keyrings.alt
          pf -v
      - name: Create AOAI Connection
        uses: ./.github/actions/execute_shell_code
        with:
          azure_credentials: ${{ secrets.azure_credentials }}
          script_parameter: |
            python -m mlops.connections.local_create_aoai_connection \
            # --aoai-api-key "${{ secrets.aoai_api_key }}" \
            # --aoai-api-base "${{ secrets.aoai_base_endpoint }}" \
            # --aoai-api-version "2023-07-01-preview" \
            # --aoai-api-type "azure" \
            --aoai-connection-name "aoai"
            pf connection list
      - name: Build PromptFlow Flow
        run: |
          pf flow build --source flows/${{ inputs.model_type }}/standard --output dist --format docker
        env:
          AZURE_CREDENTIALS: ${{ secrets.azure_credentials }}
      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_NAME }}.azurecr.io
          creds: ${{ secrets.azure_credentials }}
      - name: Build Docker Image
        run: |
          docker build -t ${{ env.ACR_NAME }}.azurecr.io/${{ inputs.model_type }}-serve:latest -f Dockerfile .
          docker push ${{ env.ACR_NAME }}.azurecr.io/${{ inputs.model_type }}-serve:latest
        env:
          AZURE_CREDENTIALS: ${{ secrets.azure_credentials }}
      - name: Connect to AKS
        uses: azure/aks-set-context@v1
        with:
          cluster-name: ${{ env.AKS_CLUSTER_NAME }}
          resource-group: ${{ env.AKS_RESOURCE_GROUP }}
      - name: Setup kubectl
        id: install-kubectl
        uses: azure/setup-kubectl@v3
      - name: Update flow-deploy/kubernetes/deployment.yaml
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'flow-deploy/kubernetes/deployment.yaml'
          propertyPath: data['open-ai-connection-api-key']
          value: ${{ secrets.aoai_api_key }}
          commitChange: false         
      - name: Deploy to AKS
        run: |
          kubectl apply -f flow-deploy/kubernetes/deployment.yaml
          kubectl rollout status deployment/${{ inputs.model_type }}-serve
        env:
          AZURE_CREDENTIALS: ${{ secrets.azure_credentials }}
       