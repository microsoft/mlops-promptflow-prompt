---
name: Basic Flow CI Workflow

on:
  workflow_call:
  push:
    branches:
      - "development"
      - "agromova/features/aks_deployment" # to be removed
    paths:
      - '.github/**'
      - 'flows/function_basic_flow/**'
      - 'flows/class_basic_flow/**'
      - 'flows/yaml_basic_flow/**'
      - 'src/basic_func_impl/**'

env:
  PYTHON_VERSION: "3.9"
  # Setting an environment variable with the value of a configuration variable
  PROJECT_NAME: ${{ vars.PROJECT_NAME }}
  RESOURCE_GROUP_NAME: ${{ vars.RESOURCE_GROUP_NAME }}
  IMAGE_NAME: "basic-flow-image"

jobs:
  run-evaluation-full:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Export Secrets 
        uses: oNaiPs/secrets-to-env-action@v1
        with:
          secrets: ${{ toJSON(secrets) }}
          convert: upper

      - name: Configure DevOps Agent
        uses: ./.github/actions/configure_devops_agent          

      - name: Execute PF Evaluation Pipeline for Function Flow
        uses: ./.github/actions/execute_shell_code
        env:
          BUILD_BUILDID: "${{ github.run_id }}" # Match the expected name from Azure DevOps pipelines
          BUILD_SOURCEBRANCHNAME: ${{ github.head_ref || github.ref_name }}
        with:
          azure_credentials: ${{ secrets.azure_credentials }}
          script_parameter: |
            python -m flows.function_basic_flow.evaluate.evaluate \
              --environment_name dev

      - name: Execute PF Evaluation Pipeline for Class Flow
        uses: ./.github/actions/execute_shell_code
        env:
          BUILD_BUILDID: "${{ github.run_id }}" # Match the expected name from Azure DevOps pipelines
          BUILD_SOURCEBRANCHNAME: ${{ github.head_ref || github.ref_name }}
        with:
          azure_credentials: ${{ secrets.azure_credentials }}
          script_parameter: |
            python -m flows.class_basic_flow.evaluate.evaluate \
              --environment_name dev

      - name: Execute PF Evaluation Pipeline for YAML Flow
        uses: ./.github/actions/execute_shell_code
        env:
          BUILD_BUILDID: "${{ github.run_id }}" # Match the expected name from Azure DevOps pipelines
          BUILD_SOURCEBRANCHNAME: ${{ github.head_ref || github.ref_name }}
        with:
          azure_credentials: ${{ secrets.azure_credentials }}
          script_parameter: |
            python -m flows.yaml_basic_flow.evaluate.evaluate \
              --environment_name dev

  # run-function-deployment:
  #   runs-on: ubuntu-latest
  #   needs: run-evaluation-full
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v1

  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: ${{ env.PYTHON_VERSION }}

  #     - name: Export Secrets 
  #       uses: oNaiPs/secrets-to-env-action@v1
  #       with:
  #         secrets: ${{ toJSON(secrets) }}
  #         convert: upper

  #     - name: Configure DevOps Agent
  #       uses: ./.github/actions/configure_devops_agent

  #     - name: Copy Flow Files into Azure Function Folder
  #       run: |
  #           cp -R flows/function_basic_flow/standard src/basic_func_impl/function_basic_invoke/flow_code
  #           cp -R flows/class_basic_flow/standard src/basic_func_impl/class_basic_invoke/flow_code
  #           cp -R flows/yaml_basic_flow/standard src/basic_func_impl/yaml_basic_invoke/flow_code
      
  #     - name: Compress Functions into Zip
  #       working-directory: ./src/basic_func_impl
  #       run: |
  #           zip build.zip * -r

  #     - name: Execute Azure Functions Deployment
  #       uses: ./.github/actions/execute_shell_code
  #       with:
  #         azure_credentials: ${{ secrets.azure_credentials }}
  #         script_parameter: |
  #           az functionapp deployment source config-zip -g ${{ vars.RESOURCE_GROUP_NAME }} -n \
  #           ${{ vars.APP_NAME }} --src 'src/basic_func_impl/build.zip' \
  #           --build-remote true

  #           az functionapp config appsettings set --name ${{ vars.APP_NAME }} --resource-group ${{ vars.RESOURCE_GROUP_NAME }} \
  #           --settings "AZURE_OPENAI_DEPLOYMENT=gpt-35-turbo" \
  #           "AZURE_OPENAI_API_VERSION=2023-07-01-preview" \
  #           "AZURE_OPENAI_API_KEY=${{ secrets.AOAI_API_KEY }}" \
  #           "AZURE_OPENAI_ENDPOINT=${{ secrets.AOAI_BASE_ENDPOINT }}"


  run-aks-deployment:
    runs-on: ubuntu-latest
    needs: run-evaluation-full
    steps:
      - name: Checkout
        uses: actions/checkout@v1
  
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Export Secrets 
        uses: oNaiPs/secrets-to-env-action@v1
        with:
          secrets: ${{ toJSON(secrets) }}
          convert: upper

      - name: Configure DevOps Agent
        uses: ./.github/actions/configure_devops_agent

      - name: Login to Azure Container Registry
        run: |
          az acr login --name ${{ secrets.ACR_REGISTRY }} --username ${{ secrets.ACR_USER_NAME }} --password ${{ secrets.ACR_PASSWORD }}

      - name: Build and push Docker image to Azure Container Registry
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./.devcontainer/Dockerfile
          push: true
          tags: ${{ secrets.ACR_REGISTRY }}.azurecr.io/${{ env.IMAGE_NAME }}:latest

      - name: Connect to AKS
        uses: azure/aks-set-context@v1
        with:
          creds: ${{ secrets.azure_credentials }}
          cluster-name: ${{ vars.CLUSTER_NAME }}
          resource-group: ${{ vars.RESOURCE_GROUP_NAME }}

      - name: Setup kubectl
        id: install-kubectl
        uses: azure/setup-kubectl@v3

      - name: Update azure-open-ai-connection-deployment
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'flow-deploy/kubernetes/deployment.yaml'
          propertyPath: data['azure-open-ai-connection-deployment']
          value: "gpt-35-turbo"
          commitChange: false

      - name: Update azure-open-ai-connection-version
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'flow-deploy/kubernetes/deployment.yaml'
          propertyPath: data['azure-open-ai-connection-version']
          value: "2023-07-01-preview"
          commitChange: false

      - name: Update azure-open-ai-connection-api-key
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'flow-deploy/kubernetes/deployment.yaml'
          propertyPath: data['azure-open-ai-connection-api-key']
          value: ${{ secrets.AOAI_API_KEY }}
          commitChange: false

      - name: Update azure-open-ai-connection-api-endpoint
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'flow-deploy/kubernetes/deployment.yaml'
          propertyPath: data['azure-open-ai-connection-api-endpoint']
          value: ${{ secrets.AOAI_BASE_ENDPOINT }}
          commitChange: false

      - name: Deploy to AKS
        run: |
          kubectl apply -f app/deployment.yaml
          kubectl rollout status deployment/basic-flow-app-deployment -n basic-flow-app
        env:
          AZURE_CREDENTIALS: ${{ secrets.azure_credentials }}