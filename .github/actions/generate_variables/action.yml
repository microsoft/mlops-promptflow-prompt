---
name: generate_variables

description: Generate Variables required for PromptFlow

inputs:
  azure_credentials:
    description: "Azure Credentials"
    required: true
  env_name:
    description: "Execution Environment"
    required: true
  model_type:
    description: "type of model to execute"
    required: true

runs:
  using: composite
  steps:
    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ inputs.azure_credentials }}
    - name: Checkout
      uses: actions/checkout@v1
    - name: Read Flow Specific Configuration File
      id: read_flow_config
      shell: pwsh
      run: |
        $json = Get-Content -Raw -Path './config/model_config.json' | ConvertFrom-Json
        $firstElement = $json.flows | Where-Object {($_.PROMPT_FLOW_CONFIG_NAME -eq "${{ inputs.model_type }}") -and ($_.ENV_NAME -eq "${{ inputs.env_name }}")} | Select-Object -First 1
        foreach ($property in $firstElement.PSObject.Properties) {
          $pname = $property.Name
          $pvalue = $property.Value
          echo "${pname}=${pvalue}" >> "$env:GITHUB_ENV"
          }

        $MODEL_NAME =  "${{ inputs.model_type }}" + "_" + "$($firstElement.MODEL_BASE_NAME)" + "_" + "${{ inputs.env_name }}" + "_" + "${{ github.head_ref || github.ref_name }}"
        $MODEL_NAME = $MODEL_NAME.replace("/", "_")

        echo "MODEL_NAME=${MODEL_NAME}" >> "$env:GITHUB_ENV"

    - name: Validate Variable Assignment
      shell: bash
      run: |
        if [ -z "$env:PROMPT_FLOW_CONFIG_NAME" ]
        then
          echo "variables are not available. Check parameter values or config json file for valid values.."
          exit 1
        else
          echo "variables were loaded from config file.."
          printenv
        fi
