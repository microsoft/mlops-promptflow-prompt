# Azure ML configuration.
aistudio_config:
  subscription_id: ${SUBSCRIPTION_ID}
  resource_group_name: ${RESOURCE_GROUP_NAME}
  project_name: ${PROJECT_NAME}

# Azure OpenAI configuration. 
aoai_config:
  aoai_api_base: ${AOAI_BASE_ENDPOINT}
  aoai_api_type: azure
  aoai_api_version: 2023-07-01-preview
  aoai_api_key: ${AOAI_API_KEY}
  
# flow configurations 
# flow config names are formatted as <flow_name>_<environment>
flow_configs:
  function_basic_flow_pr:
    standard_flow_path: flows/function_basic_flow/standard/flow.flex.yaml
    deployment_name: gpt-35-turbo
    datasets:
    - name: basic_flow
      data_path: data/basic_flow_data.jsonl
      dataset_name: basic_flow
      dataset_desc: test set for all basic flows
      column_mapping:
        text: ${data.text}
        entity_type: ${data.entity_type}
    - name: basic_flow_eval
      data_path: data/basic_flow_eval_data.jsonl
      dataset_name: basic_flow_eval
      dataset_desc: test set for all basic evaluation flows
      column_mapping:
        text: ${data.text}
        entity_type: ${data.entity_type}

  class_basic_flow_pr:
    standard_flow_path: flows/class_basic_flow/standard/flow.flex.yaml
    deployment_name: gpt-35-turbo
    datasets:
    - name: basic_flow
      data_path: data/basic_flow_data.jsonl
      dataset_name: basic_flow
      dataset_desc: test set for all basic flows
      column_mapping:
        text: ${data.text}
        entity_type: ${data.entity_type}
    - name: basic_flow_eval
      data_path: data/basic_flow_eval_data.jsonl
      dataset_name: basic_flow_eval
      dataset_desc: test set for all basic evaluation flows
      column_mapping:
        text: ${data.text}
        entity_type: ${data.entity_type}

  yaml_basic_flow_pr:
    standard_flow_path: flows/yaml_basic_flow/standard
    deployment_name: gpt-35-turbo
    connection_name: aoai
    datasets:
    - name: basic_flow
      data_path: data/basic_flow_data.jsonl
      dataset_name: basic_flow
      dataset_desc: test set for all basic flows
      column_mapping:
        text: ${data.text}
        entity_type: ${data.entity_type}
    - name: basic_flow_eval
      data_path: data/basic_flow_eval_data.jsonl
      dataset_name: basic_flow_eval
      dataset_desc: test set for all basic evaluation flows
      column_mapping:
        text: ${data.text}
        entity_type: ${data.entity_type}

  function_basic_flow_dev:
    standard_flow_path: flows/function_basic_flow/standard/flow.flex.yaml
    deployment_name: gpt-35-turbo
    datasets:
    - name: basic_flow
      data_path: data/basic_flow_data.jsonl
      dataset_name: basic_flow
      dataset_desc: test set for all basic flows
      column_mapping:
        text: ${data.text}
        entity_type: ${data.entity_type}
    - name: basic_flow_eval
      data_path: data/basic_flow_eval_data.jsonl
      dataset_name: basic_flow_eval
      dataset_desc: test set for all basic evaluation flows
      column_mapping:
        text: ${data.text}
        entity_type: ${data.entity_type}

  class_basic_flow_dev:
    standard_flow_path: flows/class_basic_flow/standard/flow.flex.yaml
    deployment_name: gpt-35-turbo
    datasets:
    - name: basic_flow
      data_path: data/basic_flow_data.jsonl
      dataset_name: basic_flow
      dataset_desc: test set for all basic flows
      column_mapping:
        text: ${data.text}
        entity_type: ${data.entity_type}
    - name: basic_flow_eval
      data_path: data/basic_flow_eval_data.jsonl
      dataset_name: basic_flow_eval
      dataset_desc: test set for all basic evaluation flows
      column_mapping:
        text: ${data.text}
        entity_type: ${data.entity_type}

  yaml_basic_flow_dev:
    standard_flow_path: flows/yaml_basic_flow/standard
    deployment_name: gpt-35-turbo
    datasets:
    - name: basic_flow
      data_path: data/basic_flow_data.jsonl
      dataset_name: basic_flow
      dataset_desc: test set for all basic flows
      column_mapping:
        text: ${data.text}
        entity_type: ${data.entity_type}
    - name: data_evaluation
      data_path: data/basic_flow_eval_data.jsonl
      dataset_name: basic_flow_eval
      dataset_desc: test set for all basic evaluation flows
      column_mapping:
        text: ${data.text}
        entity_type: ${data.entity_type}

  plan_and_execute_pr:
    standard_flow_path: flows/plan_and_execute/standard
    deployment_name_gpt35: gpt-35-turbo
    deployment_name_gpt4: gpt-4o
    aoai_api_version: 2023-12-01-preview
    bing_api_key: ${BING_API_KEY}
    bing_endpoint: https://api.bing.microsoft.com/v7.0/search
    connection_name: plan_execute_agent_connection
    datasets:
    - name: plan_and_execute_flow
      data_path: data/plan_and_execute_data.jsonl
      dataset_name: plan_and_execute_flow
      dataset_desc: test set for plan and execute flow
      column_mapping:
        question: ${data.question}
        json_schema_path: flows/plan_and_execute/evaluate/plan_and_execute_json_schema.json
    - name: plan_and_execute_flow_eval
      data_path: data/plan_and_execute_eval_data.jsonl
      dataset_name: plan_and_execute_flow_eval
      dataset_desc: test set for plan and execute evaluation flow
      column_mapping:
        question: ${data.question}
        json_schema_path: flows/plan_and_execute/evaluate/plan_and_execute_json_schema.json

  chat_with_pdf_pr:
    standard_flow_path: flows/chat_with_pdf/standard
    EMBEDDING_MODEL_DEPLOYMENT_NAME: text-embedding-ada-002
    CHAT_MODEL_DEPLOYMENT_NAME: gpt-35-turbo
    deployment_name: gpt-35-turbo
    connection_name: aoai
    
    datasets:
    - name: chat_with_pdf_data
      data_path: data/bert-paper-qna.jsonl
      dataset_name: chat_with_pdf_data
      dataset_desc: test set for chat with pdf 
      column_mapping:
        text: ${data.text}
        entity_type: ${data.entity_type}
        pdf_url: ${data.pdf_url}
        chat_history: ${data.chat_history}
        question: ${data.question}      
    
    - name: chat_with_pdf_eval_data
      data_path: data/bert-paper-qna-3-line.jsonl
      dataset_name: chat_with_pdf_eval_data
      dataset_desc: test set for chat with pdf eval
      column_mapping:
        text: ${data.text}
        entity_type: ${data.entity_type}
        pdf_url: ${data.pdf_url}
        chat_history: ${data.chat_history}
        question: ${data.question}
